// Code generated by go-swagger; DO NOT EDIT.

package document

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewRestColServiceGetDocument3Params creates a new RestColServiceGetDocument3Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRestColServiceGetDocument3Params() *RestColServiceGetDocument3Params {
	return &RestColServiceGetDocument3Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewRestColServiceGetDocument3ParamsWithTimeout creates a new RestColServiceGetDocument3Params object
// with the ability to set a timeout on a request.
func NewRestColServiceGetDocument3ParamsWithTimeout(timeout time.Duration) *RestColServiceGetDocument3Params {
	return &RestColServiceGetDocument3Params{
		timeout: timeout,
	}
}

// NewRestColServiceGetDocument3ParamsWithContext creates a new RestColServiceGetDocument3Params object
// with the ability to set a context for a request.
func NewRestColServiceGetDocument3ParamsWithContext(ctx context.Context) *RestColServiceGetDocument3Params {
	return &RestColServiceGetDocument3Params{
		Context: ctx,
	}
}

// NewRestColServiceGetDocument3ParamsWithHTTPClient creates a new RestColServiceGetDocument3Params object
// with the ability to set a custom HTTPClient for a request.
func NewRestColServiceGetDocument3ParamsWithHTTPClient(client *http.Client) *RestColServiceGetDocument3Params {
	return &RestColServiceGetDocument3Params{
		HTTPClient: client,
	}
}

/*
RestColServiceGetDocument3Params contains all the parameters to send to the API endpoint

	for the rest col service get document3 operation.

	Typically these are written to a http.Request.
*/
type RestColServiceGetDocument3Params struct {

	// CollectionID.
	CollectionID string

	// DocumentID.
	DocumentID string

	// ProjectID.
	ProjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the rest col service get document3 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RestColServiceGetDocument3Params) WithDefaults() *RestColServiceGetDocument3Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the rest col service get document3 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RestColServiceGetDocument3Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) WithTimeout(timeout time.Duration) *RestColServiceGetDocument3Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) WithContext(ctx context.Context) *RestColServiceGetDocument3Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) WithHTTPClient(client *http.Client) *RestColServiceGetDocument3Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCollectionID adds the collectionID to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) WithCollectionID(collectionID string) *RestColServiceGetDocument3Params {
	o.SetCollectionID(collectionID)
	return o
}

// SetCollectionID adds the collectionId to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) SetCollectionID(collectionID string) {
	o.CollectionID = collectionID
}

// WithDocumentID adds the documentID to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) WithDocumentID(documentID string) *RestColServiceGetDocument3Params {
	o.SetDocumentID(documentID)
	return o
}

// SetDocumentID adds the documentId to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) SetDocumentID(documentID string) {
	o.DocumentID = documentID
}

// WithProjectID adds the projectID to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) WithProjectID(projectID string) *RestColServiceGetDocument3Params {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the rest col service get document3 params
func (o *RestColServiceGetDocument3Params) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *RestColServiceGetDocument3Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param collectionId
	if err := r.SetPathParam("collectionId", o.CollectionID); err != nil {
		return err
	}

	// path param documentId
	if err := r.SetPathParam("documentId", o.DocumentID); err != nil {
		return err
	}

	// path param projectId
	if err := r.SetPathParam("projectId", o.ProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
