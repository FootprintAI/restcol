// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APICollectionMetadata api collection metadata
//
// swagger:model apiCollectionMetadata
type APICollectionMetadata struct {

	// ts when the collection was created
	// Format: date-time
	CreatedAt strfmt.DateTime `json:"CreatedAt,omitempty"`

	// ts when the collection was deleted
	// Format: date-time
	DeletedAt strfmt.DateTime `json:"DeletedAt,omitempty"`

	// cid (aka collectionId) would be used to naming ${collectionId} field, that field should be url safe
	// otherwise an error would be returned.
	// leave it empty would generate a random uuid for ${collectionId}
	CollectionID string `json:"collectionId,omitempty"`

	// pid is used to isolate resources (by projects), making the collections are belonged to a specific project
	ProjectID string `json:"projectId,omitempty"`
}

// Validate validates this api collection metadata
func (m *APICollectionMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeletedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APICollectionMetadata) validateCreatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("CreatedAt", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *APICollectionMetadata) validateDeletedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.DeletedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("DeletedAt", "body", "date-time", m.DeletedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this api collection metadata based on context it is used
func (m *APICollectionMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APICollectionMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APICollectionMetadata) UnmarshalBinary(b []byte) error {
	var res APICollectionMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
