// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: proto/restcol_authz.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthZOperateType int32

const (
	AuthZOperateType_AuthZ_OPERATE_TYPE_READ   AuthZOperateType = 0 // read = read
	AuthZOperateType_AuthZ_OPERATE_TYPE_WRITE  AuthZOperateType = 1 // write = read + write
	AuthZOperateType_AuthZ_OPERATE_TYPE_DELETE AuthZOperateType = 2 // delete = read + write + delete
)

// Enum value maps for AuthZOperateType.
var (
	AuthZOperateType_name = map[int32]string{
		0: "AuthZ_OPERATE_TYPE_READ",
		1: "AuthZ_OPERATE_TYPE_WRITE",
		2: "AuthZ_OPERATE_TYPE_DELETE",
	}
	AuthZOperateType_value = map[string]int32{
		"AuthZ_OPERATE_TYPE_READ":   0,
		"AuthZ_OPERATE_TYPE_WRITE":  1,
		"AuthZ_OPERATE_TYPE_DELETE": 2,
	}
)

func (x AuthZOperateType) Enum() *AuthZOperateType {
	p := new(AuthZOperateType)
	*p = x
	return p
}

func (x AuthZOperateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthZOperateType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_restcol_authz_proto_enumTypes[0].Descriptor()
}

func (AuthZOperateType) Type() protoreflect.EnumType {
	return &file_proto_restcol_authz_proto_enumTypes[0]
}

func (x AuthZOperateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthZOperateType.Descriptor instead.
func (AuthZOperateType) EnumDescriptor() ([]byte, []int) {
	return file_proto_restcol_authz_proto_rawDescGZIP(), []int{0}
}

type AuthZActionType int32

const (
	AuthZActionType_AuthZ_ACTION_TYPE_DENIED  AuthZActionType = 0
	AuthZActionType_AuthZ_ACTION_TYPE_ALLOWED AuthZActionType = 1
)

// Enum value maps for AuthZActionType.
var (
	AuthZActionType_name = map[int32]string{
		0: "AuthZ_ACTION_TYPE_DENIED",
		1: "AuthZ_ACTION_TYPE_ALLOWED",
	}
	AuthZActionType_value = map[string]int32{
		"AuthZ_ACTION_TYPE_DENIED":  0,
		"AuthZ_ACTION_TYPE_ALLOWED": 1,
	}
)

func (x AuthZActionType) Enum() *AuthZActionType {
	p := new(AuthZActionType)
	*p = x
	return p
}

func (x AuthZActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthZActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_restcol_authz_proto_enumTypes[1].Descriptor()
}

func (AuthZActionType) Type() protoreflect.EnumType {
	return &file_proto_restcol_authz_proto_enumTypes[1]
}

func (x AuthZActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthZActionType.Descriptor instead.
func (AuthZActionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_restcol_authz_proto_rawDescGZIP(), []int{1}
}

type LookupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdentityToken string `protobuf:"bytes,1,opt,name=userIdentityToken,proto3" json:"userIdentityToken,omitempty"`
}

func (x *LookupRequest) Reset() {
	*x = LookupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_restcol_authz_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupRequest) ProtoMessage() {}

func (x *LookupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_restcol_authz_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupRequest.ProtoReflect.Descriptor instead.
func (*LookupRequest) Descriptor() ([]byte, []int) {
	return file_proto_restcol_authz_proto_rawDescGZIP(), []int{0}
}

func (x *LookupRequest) GetUserIdentityToken() string {
	if x != nil {
		return x.UserIdentityToken
	}
	return ""
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserToken string `protobuf:"bytes,1,opt,name=userToken,proto3" json:"userToken,omitempty"`
	// resource as url
	Resource string           `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Operate  AuthZOperateType `protobuf:"varint,3,opt,name=operate,proto3,enum=restcol.api.AuthZOperateType" json:"operate,omitempty"`
	Action   AuthZActionType  `protobuf:"varint,4,opt,name=action,proto3,enum=restcol.api.AuthZActionType" json:"action,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_restcol_authz_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_restcol_authz_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_proto_restcol_authz_proto_rawDescGZIP(), []int{1}
}

func (x *Permission) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *Permission) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Permission) GetOperate() AuthZOperateType {
	if x != nil {
		return x.Operate
	}
	return AuthZOperateType_AuthZ_OPERATE_TYPE_READ
}

func (x *Permission) GetAction() AuthZActionType {
	if x != nil {
		return x.Action
	}
	return AuthZActionType_AuthZ_ACTION_TYPE_DENIED
}

type LookupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions []*Permission `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *LookupResponse) Reset() {
	*x = LookupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_restcol_authz_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupResponse) ProtoMessage() {}

func (x *LookupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_restcol_authz_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupResponse.ProtoReflect.Descriptor instead.
func (*LookupResponse) Descriptor() ([]byte, []int) {
	return file_proto_restcol_authz_proto_rawDescGZIP(), []int{2}
}

func (x *LookupResponse) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type EnforceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserToken string           `protobuf:"bytes,1,opt,name=userToken,proto3" json:"userToken,omitempty"`
	Resource  string           `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Operate   AuthZOperateType `protobuf:"varint,3,opt,name=operate,proto3,enum=restcol.api.AuthZOperateType" json:"operate,omitempty"`
}

func (x *EnforceRequest) Reset() {
	*x = EnforceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_restcol_authz_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnforceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnforceRequest) ProtoMessage() {}

func (x *EnforceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_restcol_authz_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnforceRequest.ProtoReflect.Descriptor instead.
func (*EnforceRequest) Descriptor() ([]byte, []int) {
	return file_proto_restcol_authz_proto_rawDescGZIP(), []int{3}
}

func (x *EnforceRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *EnforceRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *EnforceRequest) GetOperate() AuthZOperateType {
	if x != nil {
		return x.Operate
	}
	return AuthZOperateType_AuthZ_OPERATE_TYPE_READ
}

type EnforceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed bool   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Details string `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *EnforceResponse) Reset() {
	*x = EnforceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_restcol_authz_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnforceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnforceResponse) ProtoMessage() {}

func (x *EnforceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_restcol_authz_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnforceResponse.ProtoReflect.Descriptor instead.
func (*EnforceResponse) Descriptor() ([]byte, []int) {
	return file_proto_restcol_authz_proto_rawDescGZIP(), []int{4}
}

func (x *EnforceResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *EnforceResponse) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type PermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserToken string `protobuf:"bytes,1,opt,name=userToken,proto3" json:"userToken,omitempty"`
	// resource as url
	Resource string           `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Operate  AuthZOperateType `protobuf:"varint,3,opt,name=operate,proto3,enum=restcol.api.AuthZOperateType" json:"operate,omitempty"`
	Action   AuthZActionType  `protobuf:"varint,4,opt,name=action,proto3,enum=restcol.api.AuthZActionType" json:"action,omitempty"`
}

func (x *PermissionRequest) Reset() {
	*x = PermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_restcol_authz_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionRequest) ProtoMessage() {}

func (x *PermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_restcol_authz_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionRequest.ProtoReflect.Descriptor instead.
func (*PermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_restcol_authz_proto_rawDescGZIP(), []int{5}
}

func (x *PermissionRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *PermissionRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *PermissionRequest) GetOperate() AuthZOperateType {
	if x != nil {
		return x.Operate
	}
	return AuthZOperateType_AuthZ_OPERATE_TYPE_READ
}

func (x *PermissionRequest) GetAction() AuthZActionType {
	if x != nil {
		return x.Action
	}
	return AuthZActionType_AuthZ_ACTION_TYPE_DENIED
}

type PermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PermissionResponse) Reset() {
	*x = PermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_restcol_authz_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionResponse) ProtoMessage() {}

func (x *PermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_restcol_authz_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionResponse.ProtoReflect.Descriptor instead.
func (*PermissionResponse) Descriptor() ([]byte, []int) {
	return file_proto_restcol_authz_proto_rawDescGZIP(), []int{6}
}

var File_proto_restcol_authz_proto protoreflect.FileDescriptor

var file_proto_restcol_authz_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65, 0x73,
	0x74, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x0d, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb5, 0x01, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x37, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x5a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x63,
	0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b,
	0x0a, 0x0e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0e,
	0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x22, 0x45, 0x0a, 0x0f, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x11, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x5a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x6c, 0x0a,
	0x10, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x1c,
	0x0a, 0x18, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x41, 0x75, 0x74, 0x68, 0x5a, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x2a, 0x4e, 0x0a, 0x0f, 0x41,
	0x75, 0x74, 0x68, 0x5a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x18, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19,
	0x41, 0x75, 0x74, 0x68, 0x5a, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x01, 0x32, 0xa2, 0x05, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x12, 0x98, 0x01, 0x0a,
	0x06, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x63, 0x6f,
	0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x55, 0x92, 0x41, 0x3a, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x32, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x20, 0x61, 0x75, 0x74, 0x68, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x61, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e,
	0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0xc3, 0x01, 0x0a, 0x07, 0x45, 0x6e, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45,
	0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d,
	0x92, 0x41, 0x5e, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x56, 0x65, 0x6e, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x20, 0x67, 0x69, 0x76,
	0x65, 0x6e, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x95, 0x01,
	0x0a, 0x0f, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x41, 0x92, 0x41, 0x19, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x11, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x20, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x7a, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x98, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x92, 0x41, 0x1a,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x20, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66,
	0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x63,
	0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_restcol_authz_proto_rawDescOnce sync.Once
	file_proto_restcol_authz_proto_rawDescData = file_proto_restcol_authz_proto_rawDesc
)

func file_proto_restcol_authz_proto_rawDescGZIP() []byte {
	file_proto_restcol_authz_proto_rawDescOnce.Do(func() {
		file_proto_restcol_authz_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_restcol_authz_proto_rawDescData)
	})
	return file_proto_restcol_authz_proto_rawDescData
}

var file_proto_restcol_authz_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_restcol_authz_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_restcol_authz_proto_goTypes = []interface{}{
	(AuthZOperateType)(0),      // 0: restcol.api.AuthZOperateType
	(AuthZActionType)(0),       // 1: restcol.api.AuthZActionType
	(*LookupRequest)(nil),      // 2: restcol.api.LookupRequest
	(*Permission)(nil),         // 3: restcol.api.Permission
	(*LookupResponse)(nil),     // 4: restcol.api.LookupResponse
	(*EnforceRequest)(nil),     // 5: restcol.api.EnforceRequest
	(*EnforceResponse)(nil),    // 6: restcol.api.EnforceResponse
	(*PermissionRequest)(nil),  // 7: restcol.api.PermissionRequest
	(*PermissionResponse)(nil), // 8: restcol.api.PermissionResponse
}
var file_proto_restcol_authz_proto_depIdxs = []int32{
	0,  // 0: restcol.api.Permission.operate:type_name -> restcol.api.AuthZOperateType
	1,  // 1: restcol.api.Permission.action:type_name -> restcol.api.AuthZActionType
	3,  // 2: restcol.api.LookupResponse.permissions:type_name -> restcol.api.Permission
	0,  // 3: restcol.api.EnforceRequest.operate:type_name -> restcol.api.AuthZOperateType
	0,  // 4: restcol.api.PermissionRequest.operate:type_name -> restcol.api.AuthZOperateType
	1,  // 5: restcol.api.PermissionRequest.action:type_name -> restcol.api.AuthZActionType
	2,  // 6: restcol.api.RestColAuthZ.Lookup:input_type -> restcol.api.LookupRequest
	5,  // 7: restcol.api.RestColAuthZ.Enforce:input_type -> restcol.api.EnforceRequest
	7,  // 8: restcol.api.RestColAuthZ.GrantPermission:input_type -> restcol.api.PermissionRequest
	7,  // 9: restcol.api.RestColAuthZ.RevokePermission:input_type -> restcol.api.PermissionRequest
	4,  // 10: restcol.api.RestColAuthZ.Lookup:output_type -> restcol.api.LookupResponse
	6,  // 11: restcol.api.RestColAuthZ.Enforce:output_type -> restcol.api.EnforceResponse
	8,  // 12: restcol.api.RestColAuthZ.GrantPermission:output_type -> restcol.api.PermissionResponse
	8,  // 13: restcol.api.RestColAuthZ.RevokePermission:output_type -> restcol.api.PermissionResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_restcol_authz_proto_init() }
func file_proto_restcol_authz_proto_init() {
	if File_proto_restcol_authz_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_restcol_authz_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_restcol_authz_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_restcol_authz_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_restcol_authz_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnforceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_restcol_authz_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnforceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_restcol_authz_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_restcol_authz_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_restcol_authz_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_restcol_authz_proto_goTypes,
		DependencyIndexes: file_proto_restcol_authz_proto_depIdxs,
		EnumInfos:         file_proto_restcol_authz_proto_enumTypes,
		MessageInfos:      file_proto_restcol_authz_proto_msgTypes,
	}.Build()
	File_proto_restcol_authz_proto = out.File
	file_proto_restcol_authz_proto_rawDesc = nil
	file_proto_restcol_authz_proto_goTypes = nil
	file_proto_restcol_authz_proto_depIdxs = nil
}
